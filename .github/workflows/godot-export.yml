name: Export Godot Game

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  export_game:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: Export Game with Bundled FFmpeg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache FFmpeg Binaries
        id: cache-ffmpeg
        uses: actions/cache@v4
        with:
          path: addons/ffmpeg
          key: ffmpeg-${{ runner.os }}-linux-7.1-windows-7.1-macos-7.1-v2

      - name: Check if FFmpeg binaries exist
        id: check-ffmpeg
        run: |
          if [ -f "addons/ffmpeg/linux/ffmpeg" ] && [ -f "addons/ffmpeg/windows/ffmpeg.exe" ] && [ -f "addons/ffmpeg/macos/ffmpeg" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "All FFmpeg binaries found in cache"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "FFmpeg binaries missing, will download"
          fi

      - name: Download and Bundle FFmpeg for Linux
        if: steps.check-ffmpeg.outputs.exists != 'true'
        run: |
          # Download ffmpeg for Linux
          wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
          tar xf ffmpeg-release-amd64-static.tar.xz
          cp ffmpeg-*-amd64-static/ffmpeg addons/ffmpeg/linux/
          chmod +x addons/ffmpeg/linux/ffmpeg
          rm -rf ffmpeg-release-amd64-static.tar.xz ffmpeg-*-amd64-static
          echo "Linux ffmpeg bundled"

      - name: Download and Bundle FFmpeg for Windows
        if: steps.check-ffmpeg.outputs.exists != 'true'
        run: |
          # Download ffmpeg for Windows
          wget https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip
          unzip -q ffmpeg-release-essentials.zip
          cp ffmpeg-*-essentials_build/bin/ffmpeg.exe addons/ffmpeg/windows/
          rm -rf ffmpeg-release-essentials.zip ffmpeg-*-essentials_build
          echo "Windows ffmpeg bundled"

      - name: Download and Bundle FFmpeg for macOS
        if: steps.check-ffmpeg.outputs.exists != 'true'
        run: |
          # Download ffmpeg for macOS (Intel + Apple Silicon universal binary)
          wget https://evermeet.cx/ffmpeg/ffmpeg-7.1.zip
          unzip -q ffmpeg-7.1.zip
          mv ffmpeg addons/ffmpeg/macos/
          chmod +x addons/ffmpeg/macos/ffmpeg
          rm -rf ffmpeg-7.1.zip
          echo "macOS ffmpeg bundled"

      - name: Verify FFmpeg Binaries
        run: |
          echo "Checking bundled ffmpeg files:"
          ls -lh addons/ffmpeg/linux/
          ls -lh addons/ffmpeg/windows/
          ls -lh addons/ffmpeg/macos/

      - name: Install Dependencies
        run: |
          # Disable man-db auto-update to speed up apt-get
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-0

      - name: Export Game
        id: export
        uses: firebelley/godot-export@v7.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.5-stable/Godot_v4.5-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.5-stable/Godot_v4.5-stable_export_templates.tpz
          relative_project_path: ./
          archive_output: true
          cache: true

      - name: Add FFmpeg to Archives
        run: |
          echo "Adding ffmpeg binaries to release archives..."
          cd ${{ steps.export.outputs.archive_directory }}

          # Process Linux archive
          if [ -f "linux.zip" ]; then
            echo "Processing Linux archive..."
            unzip -q linux.zip -d linux_temp
            mkdir -p linux_temp/addons/ffmpeg/linux/
            cp ${{ github.workspace }}/addons/ffmpeg/linux/ffmpeg linux_temp/addons/ffmpeg/linux/
            chmod +x linux_temp/addons/ffmpeg/linux/ffmpeg
            cd linux_temp && zip -r -q ../linux.zip . && cd ..
            rm -rf linux_temp
            echo "Linux archive updated"
          fi

          # Process Windows archive
          if [ -f "windows.zip" ]; then
            echo "Processing Windows archive..."
            unzip -q windows.zip -d windows_temp
            mkdir -p windows_temp/addons/ffmpeg/windows/
            cp ${{ github.workspace }}/addons/ffmpeg/windows/ffmpeg.exe windows_temp/addons/ffmpeg/windows/
            cd windows_temp && zip -r -q ../windows.zip . && cd ..
            rm -rf windows_temp
            echo "Windows archive updated"
          fi

          # Process macOS archive
          if [ -f "macos.zip" ]; then
            echo "Processing macOS archive..."
            unzip -q macos.zip -d macos_temp
            mkdir -p "macos_temp/shadertoy-exporter.app/Contents/Resources/addons/ffmpeg/macos/"
            cp ${{ github.workspace }}/addons/ffmpeg/macos/ffmpeg "macos_temp/shadertoy-exporter.app/Contents/Resources/addons/ffmpeg/macos/"
            chmod +x "macos_temp/shadertoy-exporter.app/Contents/Resources/addons/ffmpeg/macos/ffmpeg"
            cd macos_temp && zip -r -q ../macos.zip . && cd ..
            rm -rf macos_temp
            echo "macOS archive updated"
          fi

          echo "All archives updated with ffmpeg binaries"

      - name: Create Release
        uses: ncipollo/release-action@v1.18.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          tag: ${{ github.ref_name }}
          artifacts: ${{ steps.export.outputs.archive_directory }}/*
          draft: false
          prerelease: false

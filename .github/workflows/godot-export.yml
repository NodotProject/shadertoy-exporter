name: Export Godot Game

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  export_game:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: Export Game with Minified Builds
    strategy:
      matrix:
        preset:
          - linux
          - windows
          - macos
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache FFmpeg Binaries
        id: cache-ffmpeg
        uses: actions/cache@v4
        with:
          path: addons/ffmpeg
          key: ffmpeg-${{ runner.os }}-linux-7.1-windows-7.1-macos-7.1-v2

      - name: Check if FFmpeg binaries exist
        id: check-ffmpeg
        run: |
          if [ -f "addons/ffmpeg/linux/ffmpeg" ] && [ -f "addons/ffmpeg/windows/ffmpeg.exe" ] && [ -f "addons/ffmpeg/macos/ffmpeg" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Download FFmpeg for Linux
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        run: |
          mkdir -p addons/ffmpeg/linux
          cd addons/ffmpeg/linux
          wget -q https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz
          tar -xf ffmpeg-master-latest-linux64-gpl.tar.xz --strip-components=2 */bin/ffmpeg
          chmod +x ffmpeg
          rm ffmpeg-master-latest-linux64-gpl.tar.xz

      - name: Download FFmpeg for Windows
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        run: |
          mkdir -p addons/ffmpeg/windows
          cd addons/ffmpeg/windows
          wget -q https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip
          unzip -q ffmpeg-master-latest-win64-gpl.zip
          mv ffmpeg-master-latest-win64-gpl/bin/ffmpeg.exe .
          rm -rf ffmpeg-master-latest-win64-gpl*
          chmod +x ffmpeg.exe

      - name: Download FFmpeg for macOS
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        run: |
          mkdir -p addons/ffmpeg/macos
          cd addons/ffmpeg/macos
          wget -q https://evermeet.cx/ffmpeg/getrelease/ffmpeg/zip -O ffmpeg.zip
          unzip -q ffmpeg.zip
          chmod +x ffmpeg
          rm ffmpeg.zip

      - name: Copy FFmpeg License Files
        run: |
          mkdir -p dist/linux dist/windows dist/macos
          # Copy license files to all dist directories
          for platform in linux windows macos; do
            cp -r addons/ffmpeg/licenses dist/$platform/ 2>/dev/null || true
          done

      - name: Export Game for ${{ matrix.preset }}
        uses: NodotProject/godot-export@v1
        with:
          godot_version: 4.5
          godot_channel: stable
          export_preset: ${{ matrix.preset }}
          export_path: dist/${{ matrix.preset }}
          custom_build: custom_build_profile.json
          create_release: false

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shadertoy-exporter-${{ matrix.preset }}
          path: dist/${{ matrix.preset }}
          retention-days: 14

  create_release:
    needs: export_game
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure
        run: ls -R artifacts/

      - name: Prepare release files
        run: |
          mkdir -p release
          cd artifacts

          # Package Linux build
          if [ -d "shadertoy-exporter-linux" ]; then
            cd shadertoy-exporter-linux
            zip -r ../../release/shadertoy-exporter-linux.zip .
            cd ..
          fi

          # Package Windows build
          if [ -d "shadertoy-exporter-windows" ]; then
            cd shadertoy-exporter-windows
            zip -r ../../release/shadertoy-exporter-windows.zip .
            cd ..
          fi

          # Package macOS build
          if [ -d "shadertoy-exporter-macos" ]; then
            cd shadertoy-exporter-macos
            zip -r ../../release/shadertoy-exporter-macos.zip .
            cd ..
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
